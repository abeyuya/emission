using_bundler = defined? Bundler
unless using_bundler
  puts "\nPlease re-run using:".red
  puts "  bundle exec pod install\n\n"
  exit(1)
end

unless Dir.exist? '../node_modules'
  puts "\nYou will need to run:".red
  puts "  yarn install\n\n"
  exit(1)
end

require "rbconfig"
expected_ruby_version = File.read(File.expand_path("../../.ruby-version", __FILE__)).strip
unless RbConfig::CONFIG["RUBY_PROGRAM_VERSION"] == expected_ruby_version
  puts "\nPlease re-run using Ruby version:".red
  puts "  #{expected_ruby_version}\n\n"
  exit(1)
end

source 'https://github.com/artsy/Specs.git'
source 'https://cdn.cocoapods.org/'

inhibit_all_warnings!
platform :ios, '10.0'

node_modules_path = '../node_modules'
react_path = File.join(node_modules_path, 'react-native')
yoga_path = File.join(react_path, 'ReactCommon/yoga')
folly_spec_path = File.join(react_path, 'third-party-podspecs/Folly.podspec')
glog_spec_path = File.join(react_path, 'third-party-podspecs/glog.podspec')
double_conversion_spec_path = File.join(react_path, 'third-party-podspecs/DoubleConversion.podspec')

# If you add a new dependency here, it should also go in the Podspec
sentry_path = File.join(node_modules_path, '@sentry/react-native')
tispi_stripe_spec_path = File.join(node_modules_path, 'tipsi-stripe/tipsi-stripe.podspec')
mapbox_path = File.join(node_modules_path, '@mapbox/react-native-mapbox-gl')
react_native_cameraroll_path = File.join(node_modules_path, '@react-native-community/cameraroll')
react_native_navigator_ios_path = File.join(node_modules_path, 'react-native-navigator-ios')

target 'Emission' do
  pod 'Emission', path: '../', inhibit_warnings: false

  # As this runs dev, we need the developer web socket
  pod 'React', path: react_path, subspecs: %w[DevSupport]
  pod 'yoga', path: yoga_path
  pod 'Folly', podspec: folly_spec_path
  pod 'DoubleConversion', podspec: double_conversion_spec_path
  pod 'glog', podspec: glog_spec_path

  pod 'Sentry', git: 'https://github.com/getsentry/sentry-cocoa.git',
                tag: '4.4.1',
                subspecs: %w[Core]
  pod 'RNSentry', path: sentry_path

  # Got to make it look right
  pod 'Artsy+UIFonts'

  # Native UI tweaks
  pod 'FLKAutoLayout'

  # This is mostly tableviews, handle them easier, we use this in Eigen/Energy too
  pod 'ARGenericTableViewController'

  # Storing Credentials
  pod 'SAMKeychain'

  # custom zoom animation for image carousel
  pod 'INTUAnimationEngine'

  # Authiung with Artsy
  pod 'Artsy+Authentication', subspecs: %w[email],
                              git: 'https://github.com/artsy/Artsy-Authentication.git',
                              branch: 'fetch-user-details'

  # Stripe- tag must match package.json's tipsi-stripe dep
  pod 'tipsi-stripe', podspec: tispi_stripe_spec_path

  # Map library
  pod 'react-native-mapbox-gl', path: mapbox_path
  pod 'RNSVG', path: '../node_modules/react-native-svg'

  pod 'react-native-cameraroll', path: react_native_cameraroll_path

  # Deprecated from React Native, but fine until we support Android
  pod 'react-native-navigator-ios', path: react_native_navigator_ios_path

  # Bottom Sheet view controller for Map view
  pod 'Pulley', git: 'https://github.com/l2succes/Pulley.git', branch: 'master'

  target 'EmissionTests' do
    inherit! :search_paths

    # Used for standard Objective-C unit tests, analagous to Jest.
    pod 'Specta'
    pod 'Expecta'

    # Necessary because we're bypassing the RCTTestCase subspec.
    pod 'FBSnapshotTestCase'
  end
end

plugin 'cocoapods-keys',
       target: 'Emission',
       keys: [
         'ArtsyAPIClientSecret',   # Authing to the Artsy API
         'ArtsyAPIClientKey',      #
         'StripePublishableKey',   # Used in Auctions registration flow
         'MapBoxAPIClientKey',     # Used in City Maps
         'SentryProductionDSN',    # Used in the Emission betas
         'GoogleMapsAPIKey'        #
       ]

post_install do |installer|
  # Mark the project as having been checked for Swift 5.
  SWIFT_MAGIC_STRING = "1020"
  installer.pods_project.root_object.attributes['LastSwiftUpdateCheck'] = SWIFT_MAGIC_STRING
  installer.pods_project.root_object.attributes['LastUpgradeCheck'] = SWIFT_MAGIC_STRING

  installer.pods_project.targets.each do |target|
    # Pulley and FBSnapshotTestCase contain pre-5.0 Swift code. Let's mark them as having been migrated.
    # Note: This is the equivalent of opening Xcode's conversion warning, un-checking 'remind me', and clicking "convert later".
    #       It does not change the contents of the Pods.
    if %w(Pulley FBSnapshotTestCase).include? target.name
      target.project.root_object.attributes['TargetAttributes'] ||= {}
      target.project.root_object.attributes['TargetAttributes'][target.uuid] = { 'LastSwiftMigration' => SWIFT_MAGIC_STRING }
    end

    target.build_configurations.each do |config|
      # CocoaPods setting the deployment target to be less than the actual deployable target is causing many Xcode warnings. This silences them. See: https://github.com/CocoaPods/CocoaPods/issues/7314
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '10.0'
    end
  end
  emission = installer.pods_project.targets.find { |target| target.name == 'Emission' }
  emission.build_configurations.each do |config|
    config.build_settings['GCC_TREAT_WARNINGS_AS_ERRORS'] = 'YES'
    # Work around https://github.com/rs/SDWebImage/issues/2022, because we don't want to upgrade to SDWebImage 4 atm.
    config.build_settings['CLANG_WARN_STRICT_PROTOTYPES'] = 'NO'
    # Use dynamic queries by default in development mode.
    if config.name == 'Debug'
      query_map = '../data/complete.queryMap.json'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = "$(inherited) USE_DYNAMIC_GRAPHQL_MAP='#{query_map}'"
    end
  end
end
